name: Terraform apply

on:
  pull_request:
    branches:
      - mgmt
      - main
    types:
      - closed

env:
  AWS_REGION: ${{ vars.AWS_REGION }}
  SYSTEM: ${{ vars.SYSTEM }}
  DEV_AWS_ACCOUNT_ID: ${{ secrets.DEV_AWS_ACCOUNT_ID }}
  PROD_AWS_ACCOUNT_ID: ${{ secrets.PROD_AWS_ACCOUNT_ID }}
  ENVS_BASE_DIR: environments

permissions:
  contents: read
  id-token: write
  pull-requests: write
  actions: read

jobs:
  plan:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - name: Set env vars for each env
        run: |
          if [ ${{ github.ref_name }} == 'main' ]; then
            echo "ENVIRONMENT=prod" >> $GITHUB_ENV
            echo "AWS_ACCOUNT_ID=${{ env.PROD_AWS_ACCOUNT_ID }}" >> $GITHUB_ENV

          elif [ ${{ github.ref_name }} == 'mgmt' ]; then
            echo "ENVIRONMENT=mgmt" >> $GITHUB_ENV
            echo "AWS_ACCOUNT_ID=${{ env.DEV_AWS_ACCOUNT_ID }}" >> $GITHUB_ENV
          fi

      - name: Checkout
        uses: actions/checkout@v4

      - uses: aquaproj/aqua-installer@v3.0.1
        with:
          aqua_version: v2.28.0
          aqua_opts: ""
        env:
          AQUA_CONFIG: aqua.yaml

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/${{ env.SYSTEM }}-${{ env.ENVIRONMENT }}-githubactions
          role-session-name: ${{ env.SYSTEM }}-${{ env.ENVIRONMENT }}-github-actions-terraform-session
          aws-region: ${{ env.AWS_REGION }}

      # キャッシュしているとterragrunt run-all planがうまく動かないのでコメントアウト
      # - name: Config Terraform plugin cache
      #   run: |
      #     echo 'plugin_cache_dir="$HOME/.terraform.d/plugin-cache"' >~/.terraformrc
      #     mkdir --parents ~/.terraform.d/plugin-cache

      # - name: Cache Terraform Plugins
      #   uses: actions/cache@v4
      #   with:
      #     path: |
      #       ~/.terraform.d/plugin-cache
      #     key: ${{ runner.os }}-terraform-${{ hashFiles('**/.terraform.lock.hcl') }}
      #     restore-keys: |
      #       ${{ runner.os }}-terraform-

      - name: Terragrunt run-all init
        working-directory: ${{ env.ENVS_BASE_DIR }}/${{ env.ENVIRONMENT }}
        run: |
          terragrunt run-all init --terragrunt-non-interactive

      - name: Terragrunt run-all plan
        working-directory: ${{ env.ENVS_BASE_DIR }}/${{ env.ENVIRONMENT }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          terragrunt run-all plan --terragrunt-non-interactive --terragrunt-tfpath $GITHUB_WORKSPACE/.github/scripts/tfwrapper.sh

  apply:
    if: github.event.pull_request.merged == true
    needs: plan
    # environment:
    #   name: Production
    runs-on: ubuntu-latest
    steps:
      - name: Set env vars for each env
        run: |
          if [ ${{ github.ref_name }} == 'main' ]; then
            echo "ENVIRONMENT=prod" >> $GITHUB_ENV
            echo "AWS_ACCOUNT_ID=${{ env.PROD_AWS_ACCOUNT_ID }}" >> $GITHUB_ENV

          elif [ ${{ github.ref_name }} == 'mgmt' ]; then
            echo "ENVIRONMENT=mgmt" >> $GITHUB_ENV
            echo "AWS_ACCOUNT_ID=${{ env.DEV_AWS_ACCOUNT_ID }}" >> $GITHUB_ENV
          fi

      - name: Checkout
        uses: actions/checkout@v4

      - uses: aquaproj/aqua-installer@v3.0.1
        with:
          aqua_version: v2.28.0
          aqua_opts: ""
        env:
          AQUA_CONFIG: aqua.yaml

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/${{ env.SYSTEM }}-${{ env.ENVIRONMENT }}-githubactions
          role-session-name: ${{ env.SYSTEM }}-${{ env.ENVIRONMENT }}-github-actions-terraform-session
          aws-region: ${{ env.AWS_REGION }}

      # - name: Config Terraform plugin cache
      #   run: |
      #     echo 'plugin_cache_dir="$HOME/.terraform.d/plugin-cache"' >~/.terraformrc
      #     mkdir --parents ~/.terraform.d/plugin-cache

      # - name: Cache Terraform Plugins
      #   uses: actions/cache@v4
      #   with:
      #     path: |
      #       ~/.terraform.d/plugin-cache
      #     key: ${{ runner.os }}-terraform-${{ hashFiles('**/.terraform.lock.hcl') }}
      #     restore-keys: |
      #       ${{ runner.os }}-terraform-

      - name: Terragrunt run-all init
        working-directory: ${{ env.ENVS_BASE_DIR }}/${{ env.ENVIRONMENT }}
        run: |
          terragrunt run-all init --terragrunt-non-interactive

      - name: Terragrunt run-all apply
        working-directory: ${{ env.ENVS_BASE_DIR }}/${{ env.ENVIRONMENT }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          terragrunt run-all apply --terragrunt-non-interactive --terragrunt-tfpath $GITHUB_WORKSPACE/.github/scripts/tfwrapper.sh
